rule cnvkit_somatic_tumoronly:
    input: tumor=lambda wildcards: config['project']['units'][wildcards.x]+".recal.bam",
           targets=config['project']['workpath']+"/cnvkit_targets.bed",
           vcf=config['project']['workpath']+"/germline_vcfs/combined.vcf",
    output: calls=config['project']['workpath']+"/cnvkit_out/{x}_calls.cns",
            gainloss=config['project']['workpath']+"/cnvkit_out/{x}_gainloss.tsv",
            dir=config['project']['workpath']+"/cnvkit_out/{x}_cnvkit"
    params: tumorsample=lambda wildcards: config['project']['units'][wildcards.x],access=config['references'][pfamily]['CNVKITACCESS'],targets="cnvkit_targets.bed",antitargets="cnvkit_antitargets.bed",genome=config['references'][pfamily]['CNVKITGENOME'],regions="exome_targets.bed",rname="pl:cnvkit_somatic"
    threads: 1
    shell: "module load cnvkit/0.9.1; mkdir -p {output.dir}; cnvkit.py coverage {input.tumor} {params.targets} -q 20 -o {output.dir}/{params.tumorsample}.targetcoverage.cnn; cnvkit.py coverage {input.tumor} {params.antitargets} -q 20 -o {output.dir}/{params.tumorsample}.antitargetcoverage.cnn; cnvkit.py reference -f {params.genome} -o {output.dir}/{params.tumorsample}.FLATreference.cnn -t {params.targets} -a {params.antitargets}; cnvkit.py fix {output.dir}/{params.tumorsample}.targetcoverage.cnn {output.dir}/{params.tumorsample}.antitargetcoverage.cnn {output.dir}/{params.tumorsample}.FLATreference.cnn -o {output.dir}/{params.tumorsample}.cnr; cnvkit.py segment {output.dir}/{params.tumorsample}.cnr --drop-low-coverage -i {params.tumorsample} -z -v {input.vcf} -o {output.dir}/{params.tumorsample}.cns; cnvkit.py scatter {output.dir}/{params.tumorsample}.cnr -s {output.dir}/{params.tumorsample}.cns -z -v {input.vcf} -i {params.tumorsample} -o {output.dir}/{params.tumorsample}.png; cnvkit.py call -o {output.calls} -i {params.tumorsample} -z -v {input.vcf} {output.dir}/{params.tumorsample}.cns; cnvkit.py gainloss -s {output.dir}/{params.tumorsample}.cns -t 0.3 --drop-low-coverage -o {output.gainloss} {output.dir}/{params.tumorsample}.cnr; cnvkit.py segmetrics -s {output.dir}/{params.tumorsample}.cns --drop-low-coverage -o {output.dir}/{params.tumorsample}.segmetrics --mean --median --mode --stdev --sem --mad --mse --iqr --bivar --ci --pi -b 1000 {output.dir}/{params.tumorsample}.cnr"